#include <stdio.h>

void
merge (int a[], int l, int mid, int r)
{
  int n1 = mid - l + 1;
  int n2 = r - mid;
  int c[n1];
  int d[n2];
  for (int i = 0; i <= n1; i++)
    {
      c[i] = a[l + i];
    }
  for (int j = 0; j < n2; j++)
    {
      d[j] = a[mid + 1 + j];
    }
  int k = 0;
  int i = 0;
  int j = 0;
  while (k < n1 + n2)
    {
      if (j == n2 || c[i] < d[j])
	{
	  a[k] = c[i];
	  i++;
	  k++;
	}
      if (i == n1 || c[i] > d[j])
	{
	  a[k] = c[j];
	  j++;
	  k++;
	}
    }

}

void
mergesort (int a[], int l, int r)
{
  if (l < r)
    {
      int mid = (l + r) / 2;
      mergesort (a, l, mid);
      mergesort (a, mid + 1, r);
      merge (a, l, mid, r);

    }

}

void
print_array (int array[], int p, int r)
{
  int i;
  for (i = p; i <= r; i++)
    {
      printf ("%4d", array[i]);
    }
}


int
main ()
{
  int a[] = { 34, 12, 19, 45, 2, 1, 15 };
  int p = 0;
  int r = 6;
  mergesort (a, p, r);
  print_array (a, p, r);
  return 0;
}

